apiVersion: v1
kind: Template
metadata:
  name: chatbot-template
  labels:
    app: chatbot
  annotations:
    description: "Description"
    tags: "chatbot,ai,rasa"
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: chatbot
      build: chatbot-core
    name: chatbot-core
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 2
    labels:
      build: chatbot-core
    name: python
  spec:
    lookupPolicy:
      local: false
    tags:
      - from:
          kind: DockerImage
          name: 'python:3.6-slim'
        generation: 2
        importPolicy: {}
        name: 3.6-slim
        referencePolicy:
          type: Source
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: chatbot-core
    labels:
      app: chatbot
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'chatbot-core:latest'
    resources:
      limits:
        memory: 4Gi
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'python:3.6-slim'
      type: Docker
- apiVersion: v1
  kind: Secret
  metadata:
    name: chatbot-mongodb
    namespace: my-namespace
    labels:
      app: chatbot
      template: chatbot-template
  type: Opaque 
  data:
    database-admin-password: NDEwTUZtalZiMHBuQzhWbA==
    database-name: c2FtcGxlZGI=
    database-password: bDNJaFhHVjdPbDNBRmRjRA==
    database-user: dXNlclRURQ==
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 2
    labels:
      app: chatbot-mongodb
      template: chatbot-template
    name: chatbot-mongodb
  spec:
    replicas: 1
    selector:
      name: chatbot-mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: chatbot-mongodb
          name: chatbot-mongodb
      spec:
        containers:
          - env:
              - name: MONGODB_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: chatbot-mongodb
              - name: MONGODB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: chatbot-mongodb
              - name: MONGODB_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-admin-password
                    name: chatbot-mongodb
              - name: MONGODB_DATABASE
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: chatbot-mongodb
            image: >-
              registry.access.redhat.com/rhscl/mongodb-32-rhel7:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 27017
              timeoutSeconds: 1
            name: mongodb
            ports:
              - containerPort: 27017
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - '-i'
                  - '-c'
                  - >-
                    mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p
                    $MONGODB_PASSWORD --eval="quit()"
              failureThreshold: 3
              initialDelaySeconds: 3
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                memory: 512Mi
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/lib/mongodb/data
                name: chatbot-mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: chatbot-mongodb-data
            persistentVolumeClaim:
              claimName: chatbot-mongodb
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - mongodb
          from:
            kind: ImageStreamTag
            name: 'mongodb:3.2'
            namespace: openshift
          lastTriggeredImage: >-
            registry.access.redhat.com/rhscl/mongodb-32-rhel7:latest
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: chatbot-core
    name: chatbot-core
  spec:
    replicas: 1
    selector:
      app: chatbot-core
      deploymentconfig: chatbot-core
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: chatbot-core
          deploymentconfig: chatbot-core
      spec:
        containers:
          - env:
              - name: MONGODB_HOST
                value: chatbot-mongodb
              - name: MONGODB_DBNAME
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: chatbot-mongodb
              - name: MONGODB_PASS
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: chatbot-mongodb
              - name: MONGODB_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: chatbot-mongodb
              - name: PORT
                value: '5005'
            image: >-
              172.30.1.1:5000/myproject/chatbot-core:latest
            imagePullPolicy: Always
            name: chatbot-core
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            ports:
              - containerPort: 5005
                protocol: "TCP"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - chatbot-core
          from:
            kind: ImageStreamTag
            name: 'chatbot-core:latest'
        type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: chatbot-mongodb
    labels:
      app: chatbot-mongodb
  spec:
    ports:
      - name: mongodb
        port: 27017
        protocol: TCP
        targetPort: 27017
    selector:
      app: chatbot-mongodb
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: chatbot-core
    labels:
      app: chatbot
  spec:
    ports:
      - name: chatbot
        port: 5005
        protocol: TCP
        targetPort: 5005
    selector:
      app: chatbot-core
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: chatbot-core
    name: chatbot-core
  spec:
    host: chatbot-daan-eval.ewu.oscp.easycredit.intern
    port:
      targetPort: chatbot
    to:
      kind: Service
      name: chatbot-core
      weight: 100
    wildcardPolicy: None
